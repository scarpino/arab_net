axis(2,at=seq(-43, 0, length.out = 6),labels=round(seq(-43, 0, length.out = 6),0),las = 2)
par(mar=c(2,2,1,2))
use.eigen <- which(is.finite(log(res.cold[,"eigenvector"]))==TRUE)
boxplot(log(res.cold[use.eigen,"eigenvector"])~res.cold[use.eigen,"id"], col = c("#2166ac","#92c5de"), yaxt = "n", names = c("G x E", "non G x E"), pch = 16, ylim = c(-43, 0), range = 0)
axis(2,at=seq(-43, 0, length.out = 6),labels=rep("", 6),las = 2)
#Figure 2
png("dry_comm.png", width = 1800, height = 1800)
par(mar = c(0,1,4,1))
plot(gr.dry.com, vertex.label = NA, vertex.size = sizes[sizes.dry], vertex.color = cols.com.plot[colors.dry], edge.color = "#e0e0e095", edge.width = 1, main = "Principle Dry Community", vertex.frame.color = NA, layout = layout_nicely(gr.dry.com))
dev.off()
png("cold_comm.png", width = 1800, height = 1800)
par(mar = c(0,1,4,1))
plot(gr.cold.com,  vertex.label = NA, vertex.size = sizes[sizes.cold], vertex.color = cols.com.plot[colors.cold], edge.color = "#e0e0e095", edge.width = 1, main = "Principle Cold Community", vertex.frame.color = NA, layout = layout_nicely(gr.cold.com))
dev.off()
pdf("F2.pdf")
#quartz(width = 10, height = 4)
layout(matrix(1:2, ncol = 2))
par(mar = c(0,0.1,4,0.5))
plot(gr.dry.com, vertex.label = NA, vertex.size = sizes[sizes.dry], vertex.color = cols.com.plot[colors.dry], edge.color = "#e0e0e055", edge.width = 0.5, main = "Principle Dry Community", vertex.frame.color = NA, layout = layout_nicely(gr.dry.com))
par(mar = c(0,0.5,4,0.1))
plot(gr.cold.com,  vertex.label = NA, vertex.size = sizes[sizes.cold], vertex.color = cols.com.plot[colors.cold], edge.color = "#e0e0e055", edge.width = 0.5, main = "Principle Cold Community", vertex.frame.color = NA, layout = layout_nicely(gr.cold.com))
dev.off()
#testing with TPC2015-00910
clust_TPC <- read.csv("../data/TPC2015_00910/clusters_TPC2015_00910.csv")[,1:4]
length(which(genes.dry %in% clust_TPC$Locus.ID))
ALG22 <- "AT2G22540"
gen.unq <- unique(c(as.character(dat[,2]), as.character(dat[,3])))
scores.dry <- rep(NA, length(gen.unq))
for(i in 1:length(scores.dry)){
use.i <- which(dat[,2] == gen.unq[i] | dat[,3] == gen.unq[i])
rm.i <- which(genes.dry == gen.unq[i])
if(length(rm.i) > 0){
genes.dry.test <- genes.dry[-rm.i]
}else{
genes.dry.test <- genes.dry
}
score.i <- length(which(unique(c(as.character(dat[use.i,2]), as.character(dat[use.i,3]))) %in% genes.dry.test))
scores.dry[i] <- score.i
}
overunder <- ggplot(commsFilter)+
geom_hline(yintercept=0, linetype = 2)+
geom_point(aes(y=relDiff,x=size, color=colCat), size=2)+
scale_x_log10(limits=c(10,1000))+
facet_wrap(~treatment)+theme_few(base_size = 16)+
theme(legend.position="none")+
scale_color_manual(values=c( "darkorange2", "grey90","chartreuse4"))+
labs(x="Community size", y="Relative representation of eGxE genes")
library(cowplot)
overunder <- ggplot(commsFilter)+
geom_hline(yintercept=0, linetype = 2)+
geom_point(aes(y=relDiff,x=size, color=colCat), size=2)+
scale_x_log10(limits=c(10,1000))+
facet_wrap(~treatment)+theme_few(base_size = 16)+
theme(legend.position="none")+
scale_color_manual(values=c( "darkorange2", "grey90","chartreuse4"))+
labs(x="Community size", y="Relative representation of eGxE genes")
source("arab_overunder_funcs.R")
overunder <- ggplot(commsFilter)+
geom_hline(yintercept=0, linetype = 2)+
geom_point(aes(y=relDiff,x=size, color=colCat), size=2)+
scale_x_log10(limits=c(10,1000))+
facet_wrap(~treatment)+theme_few(base_size = 16)+
theme(legend.position="none")+
scale_color_manual(values=c( "darkorange2", "grey90","chartreuse4"))+
labs(x="Community size", y="Relative representation of eGxE genes")
comms_raw <- read.csv("../data/comm_props_raw_21Jan16.csv")
n_genes <- sum(comms_raw$size)
n_dry <- sum(comms_raw$Drought)
n_cold <- sum(comms_raw$Cold)
comms <- comms_raw %>%
gather(treatment, treat_in, Drought, Cold)%>%
mutate(treat_total = ifelse(treatment =="Drought", n_dry, n_cold),
expect = ifelse(treatment =="Drought", n_dry*prop, n_cold*prop))%>%
rowwise()%>%
mutate(p.val = pfish(size, treat_in, treat_total, n_genes))%>%
ungroup()%>%mutate(p.adj = p.adjust(p.val, method = "BH"))
head(comms_raw)
comms_raw$Drought
comms_raw <- read.csv("../data/comm_props_raw_21Jan16.csv")
comms_raw <- transmute(comms_raw, number = 1:dim(comms_raw)[1], size=full_raw, prop= full_prop, Drought=dry_raw, Cold=cold_raw)
n_genes <- sum(comms_raw$size)
n_dry <- sum(comms_raw$Drought)
n_cold <- sum(comms_raw$Cold)
comms <- comms_raw %>%
gather(treatment, treat_in, Drought, Cold)%>%
mutate(treat_total = ifelse(treatment =="Drought", n_dry, n_cold),
expect = ifelse(treatment =="Drought", n_dry*prop, n_cold*prop))%>%
rowwise()%>%
mutate(p.val = pfish(size, treat_in, treat_total, n_genes))%>%
ungroup()%>%mutate(p.adj = p.adjust(p.val, method = "BH"))
commsFilter <- comms %>%
filter(size > 9)%>%
mutate(p.adj = p.adjust(p.val, method = "BH"),
relDiff = (treat_in-expect)/treat_total,
colCat = ifelse(p.adj < 0.05, ifelse(relDiff<0, "down", "up"), "ns"))
overunder <- ggplot(commsFilter)+
geom_hline(yintercept=0, linetype = 2)+
geom_point(aes(y=relDiff,x=size, color=colCat), size=2)+
scale_x_log10(limits=c(10,1000))+
facet_wrap(~treatment)+theme_few(base_size = 16)+
theme(legend.position="none")+
scale_color_manual(values=c( "darkorange2", "grey90","chartreuse4"))+
labs(x="Community size", y="Relative representation of eGxE genes")
cowplot::ggdraw()+
cowplot::draw_plot(overunder)+
cowplot::draw_text("over", x=0.45, y=0.85, color="chartreuse4", size = 11)+
cowplot::draw_text("under", x=0.45, y=0.4, color="darkorange2", size = 11)
head(commsFilter)
overunder <- ggplot(commsFilter)+
geom_hline(yintercept=0, linetype = 2)+
geom_point(aes(y=relDiff,x=size, color=treatment), size=2)+
scale_x_log10(limits=c(10,1000))+
facet_wrap(~treatment)+theme_few(base_size = 16)+
theme(legend.position="none")+
scale_color_manual(values=c( "darkorange2", "grey90","chartreuse4"))+
labs(x="Community size", y="Relative representation of eGxE genes")
cowplot::ggdraw()+
cowplot::draw_plot(overunder)+
cowplot::draw_text("over", x=0.45, y=0.85, color="chartreuse4", size = 11)+
cowplot::draw_text("under", x=0.45, y=0.4, color="darkorange2", size = 11)
overunder <- ggplot(commsFilter)+
geom_hline(yintercept=0, linetype = 2)+
geom_point(aes(y=relDiff,x=size, color=colCat), size=2)+
scale_x_log10(limits=c(10,1000))+
facet_wrap(~treatment)+theme_few(base_size = 16)+
theme(legend.position="none")+
scale_color_manual(values=c( "darkorange2", "grey90","chartreuse4"))+
labs(x="Community size", y="Relative representation of eGxE genes")
cowplot::ggdraw()+
cowplot::draw_plot(overunder)+
cowplot::draw_text("over", x=0.45, y=0.85, color="chartreuse4", size = 11)+
cowplot::draw_text("under", x=0.45, y=0.4, color="darkorange2", size = 11)
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
rm(list=ls())
#libraries
library(igraph)
library(glmnet)
#data
exp <- read.csv("../data/Expression Level/Yang&Gaut Table_S1.csv")
cold <- read.csv("../data/HannahAllGxTCold.csv")
cold_0.1 <- read.csv("../data/FDR0.1/Cold GxE FDR0.1.csv")
dry <- read.csv("../data/DaveAllGxTDrought.csv")
dry_0.1 <- read.csv("../data/FDR0.1/Drought GxE FDR0.1.csv")
IND <- rep(NA, nrow(exp))
IND[which(exp$ID %in% cold$Probe_Set_ID)] <- "cold"
IND[which(exp$ID %in% dry[,1])] <- "dry"
boxplot(log(exp$Expression.Level) ~ IND)
t.test(log(exp$Expression.Level) ~ IND)
metric <- diff(by(exp$Expression.Level, IND, mean))
sim_mets <- c()
for(i in 1:1000){
IND.i <- rep(NA, nrow(exp))
IND.i[sample(1:nrow(exp), length(which(IND == "cold")))] <- "cold"
IND.i[sample(1:nrow(exp), length(which(IND == "dry")))] <- "dry"
metric.i <- diff(by(exp$Expression.Level, IND.i, mean))
sim_mets <- c(sim_mets, metric.i)
}
length(which(abs(sim_mets) > abs(metric)))/i
#re-sampling cold
prob <- exp$Expression.Level/by(exp$Expression.Level, IND, sum)[1]
t_test_stats <- rep(NA, 1000)
pval_deg <- rep(NA, 1000)
pval_eigen <- rep(NA, 1000)
use <- sample(which(IND == "cold"), size = 900, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
test.i$p.value
test.i
use <- sample(which(IND == "cold"), size = 900, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
test.i
use <- sample(which(IND == "cold"), size = 900, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
test.i
t_test_stats <- rep(NA, 1000)
pval_deg <- rep(NA, 1000)
pval_eigen <- rep(NA, 1000)
use <- sample(which(IND == "cold"), size = 900, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
t_test_stats[n] <- test.i$p.value
genes <- as.character(exp$ID[which(IND2 == "cold")])
layout(matrix(1:4,ncol=2))
for(i in c(2,5)){
dat.i <- dat.test[which(is.finite(log(dat.test[,i]))==TRUE),]
use <- which(dat.i[,1] %in% genes)
id <- rep('nonGE',nrow(dat.i))
id[use] <- 'GE'
dat.i <- log(dat.i[,i])
obs.i <- abs(mean(dat.i[use])-mean(dat.i[-use]))
len1 <- c()
for(j in 1:1000){
use.j <- sample(1:length(id), length(use), replace=TRUE)
met.j <- abs(mean(dat.i[use.j])-mean(dat.i[-use.j]))
len1 <- c(len1,met.j)
}
p.i <- round(length(which(len1>obs.i)),4)/j
if(i == 2){
pval_deg[n] <- p.i
}
if(i == 5){
pval_eigen[n] <- p.i
}
#boxplot(dat.i~id,main=paste0(colnames(dat.test)[i],' p value = ',p.i))
}
prob <- exp$Expression.Level/by(exp$Expression.Level, IND, sum)[1]
dat.test<- read.csv("../data/gene_expression_net_feltus_main.csv")
t_test_stats <- rep(NA, 1000)
pval_deg <- rep(NA, 1000)
pval_eigen <- rep(NA, 1000)
use <- sample(which(IND == "cold"), size = 900, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
t_test_stats[n] <- test.i$p.value
genes <- as.character(exp$ID[which(IND2 == "cold")])
layout(matrix(1:4,ncol=2))
for(i in c(2,5)){
dat.i <- dat.test[which(is.finite(log(dat.test[,i]))==TRUE),]
use <- which(dat.i[,1] %in% genes)
id <- rep('nonGE',nrow(dat.i))
id[use] <- 'GE'
dat.i <- log(dat.i[,i])
obs.i <- abs(mean(dat.i[use])-mean(dat.i[-use]))
len1 <- c()
for(j in 1:1000){
use.j <- sample(1:length(id), length(use), replace=TRUE)
met.j <- abs(mean(dat.i[use.j])-mean(dat.i[-use.j]))
len1 <- c(len1,met.j)
}
p.i <- round(length(which(len1>obs.i)),4)/j
if(i == 2){
pval_deg[n] <- p.i
}
if(i == 5){
pval_eigen[n] <- p.i
}
#boxplot(dat.i~id,main=paste0(colnames(dat.test)[i],' p value = ',p.i))
}
n <- 1
use <- sample(which(IND == "cold"), size = 900, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
t_test_stats[n] <- test.i$p.value
genes <- as.character(exp$ID[which(IND2 == "cold")])
layout(matrix(1:4,ncol=2))
for(i in c(2,5)){
dat.i <- dat.test[which(is.finite(log(dat.test[,i]))==TRUE),]
use <- which(dat.i[,1] %in% genes)
id <- rep('nonGE',nrow(dat.i))
id[use] <- 'GE'
dat.i <- log(dat.i[,i])
obs.i <- abs(mean(dat.i[use])-mean(dat.i[-use]))
len1 <- c()
for(j in 1:1000){
use.j <- sample(1:length(id), length(use), replace=TRUE)
met.j <- abs(mean(dat.i[use.j])-mean(dat.i[-use.j]))
len1 <- c(len1,met.j)
}
p.i <- round(length(which(len1>obs.i)),4)/j
if(i == 2){
pval_deg[n] <- p.i
}
if(i == 5){
pval_eigen[n] <- p.i
}
#boxplot(dat.i~id,main=paste0(colnames(dat.test)[i],' p value = ',p.i))
}
head(pval_eigen)
head(pval_deg)
head(t_test_stats)
met.j
prob <- exp$Expression.Level/by(exp$Expression.Level, IND, sum)[1]
dat.test<- read.csv("../data/gene_expression_net_feltus_main.csv")
t_test_stats <- rep(NA, 1000)
pval_deg <- rep(NA, 1000)
pval_eigen <- rep(NA, 1000)
diff_deg <- rep(NA, 1000)
diff_eigen <- rep(NA, 1000)
use <- sample(which(IND == "cold"), size = 900, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
t_test_stats[n] <- test.i$p.value
genes <- as.character(exp$ID[which(IND2 == "cold")])
layout(matrix(1:4,ncol=2))
for(i in c(2,5)){
dat.i <- dat.test[which(is.finite(log(dat.test[,i]))==TRUE),]
use <- which(dat.i[,1] %in% genes)
id <- rep('nonGE',nrow(dat.i))
id[use] <- 'GE'
dat.i <- log(dat.i[,i])
obs.i <- abs(mean(dat.i[use])-mean(dat.i[-use]))
len1 <- c()
for(j in 1:1000){
use.j <- sample(1:length(id), length(use), replace=TRUE)
met.j <- abs(mean(dat.i[use.j])-mean(dat.i[-use.j]))
len1 <- c(len1,met.j)
}
p.i <- round(length(which(len1>obs.i)),4)/j
if(i == 2){
pval_deg[n] <- p.i
diff_deg[n] <- met.j
}
if(i == 5){
pval_eigen[n] <- p.i
diff_eigen[n] <- met.j
}
#boxplot(dat.i~id,main=paste0(colnames(dat.test)[i],' p value = ',p.i))
}
head(diff_deg)
head(diff_eigen)
head(pval_deg)
head(pval_eigen)
head(t_test_stats)
table(IND)
use <- sample(which(IND == "cold"), size = length(which(IND) == "dry"), prob = 1/prob[which(IND == "cold")])
use <- sample(which(IND == "cold"), size = length(which(IND == "dry")), prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
test.i
rm(list=ls())
#libraries
library(igraph)
library(glmnet)
#data
exp <- read.csv("../data/Expression Level/Yang&Gaut Table_S1.csv")
cold <- read.csv("../data/HannahAllGxTCold.csv")
cold_0.1 <- read.csv("../data/FDR0.1/Cold GxE FDR0.1.csv")
dry <- read.csv("../data/DaveAllGxTDrought.csv")
dry_0.1 <- read.csv("../data/FDR0.1/Drought GxE FDR0.1.csv")
IND <- rep(NA, nrow(exp))
IND[which(exp$ID %in% cold$Probe_Set_ID)] <- "cold"
IND[which(exp$ID %in% dry[,1])] <- "dry"
boxplot(log(exp$Expression.Level) ~ IND)
t.test(log(exp$Expression.Level) ~ IND)
metric <- diff(by(exp$Expression.Level, IND, mean))
sim_mets <- c()
for(i in 1:1000){
IND.i <- rep(NA, nrow(exp))
IND.i[sample(1:nrow(exp), length(which(IND == "cold")))] <- "cold"
IND.i[sample(1:nrow(exp), length(which(IND == "dry")))] <- "dry"
metric.i <- diff(by(exp$Expression.Level, IND.i, mean))
sim_mets <- c(sim_mets, metric.i)
}
length(which(abs(sim_mets) > abs(metric)))/i
#re-sampling cold
prob <- exp$Expression.Level/by(exp$Expression.Level, IND, sum)[1]
dat.test<- read.csv("../data/gene_expression_net_feltus_main.csv")
t_test_stats <- rep(NA, 1000)
pval_deg <- rep(NA, 1000)
pval_eigen <- rep(NA, 1000)
diff_deg <- rep(NA, 1000)
diff_eigen <- rep(NA, 1000)
for(n in 1:1000){
use <- sample(which(IND == "cold"), size = length(which(IND == "dry")), prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
t_test_stats[n] <- test.i$p.value
genes <- as.character(exp$ID[which(IND2 == "cold")])
layout(matrix(1:4,ncol=2))
for(i in c(2,5)){
dat.i <- dat.test[which(is.finite(log(dat.test[,i]))==TRUE),]
use <- which(dat.i[,1] %in% genes)
id <- rep('nonGE',nrow(dat.i))
id[use] <- 'GE'
dat.i <- log(dat.i[,i])
obs.i <- abs(mean(dat.i[use])-mean(dat.i[-use]))
len1 <- c()
for(j in 1:1000){
use.j <- sample(1:length(id), length(use), replace=TRUE)
met.j <- abs(mean(dat.i[use.j])-mean(dat.i[-use.j]))
len1 <- c(len1,met.j)
}
p.i <- round(length(which(len1>obs.i)),4)/j
if(i == 2){
pval_deg[n] <- p.i
diff_deg[n] <- met.j
}
if(i == 5){
pval_eigen[n] <- p.i
diff_eigen[n] <- met.j
}
#boxplot(dat.i~id,main=paste0(colnames(dat.test)[i],' p value = ',p.i))
}
}
length(which(t_test_stats < 0.05))
summary(t_test_stats)
summary(pval_deg)
summary(diff_deg)
summary(exp(diff_deg))
summary(diff_eigen)
summary(pval_eigen)
summary(pval_deg)
length(which(pval_eigen < 0.05))
length(which(pval_eigen < 0.05))/n
1 - length(which(pval_eigen < 0.05))/n
1 - length(which(pval_deg < 0.05))/n
use <- sample(which(IND == "cold"), size = 800, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
test.i$p.value
use <- sample(which(IND == "cold"), size = 700, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
test.i$p.value
use <- sample(which(IND == "cold"), size = 750, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
test.i$p.value
#libraries
library(igraph)
library(glmnet)
#data
exp <- read.csv("../data/Expression Level/Yang&Gaut Table_S1.csv")
cold <- read.csv("../data/HannahAllGxTCold.csv")
cold_0.1 <- read.csv("../data/FDR0.1/Cold GxE FDR0.1.csv")
dry <- read.csv("../data/DaveAllGxTDrought.csv")
dry_0.1 <- read.csv("../data/FDR0.1/Drought GxE FDR0.1.csv")
IND <- rep(NA, nrow(exp))
IND[which(exp$ID %in% cold$Probe_Set_ID)] <- "cold"
IND[which(exp$ID %in% dry[,1])] <- "dry"
boxplot(log(exp$Expression.Level) ~ IND)
t.test(log(exp$Expression.Level) ~ IND)
metric <- diff(by(exp$Expression.Level, IND, mean))
sim_mets <- c()
for(i in 1:1000){
IND.i <- rep(NA, nrow(exp))
IND.i[sample(1:nrow(exp), length(which(IND == "cold")))] <- "cold"
IND.i[sample(1:nrow(exp), length(which(IND == "dry")))] <- "dry"
metric.i <- diff(by(exp$Expression.Level, IND.i, mean))
sim_mets <- c(sim_mets, metric.i)
}
length(which(abs(sim_mets) > abs(metric)))/i
#re-sampling cold
prob <- exp$Expression.Level/by(exp$Expression.Level, IND, sum)[1]
dat.test<- read.csv("../data/gene_expression_net_feltus_main.csv")
t_test_stats <- rep(NA, 1000)
pval_deg <- rep(NA, 1000)
pval_eigen <- rep(NA, 1000)
diff_deg <- rep(NA, 1000)
diff_eigen <- rep(NA, 1000)
for(n in 1:1000){
use <- sample(which(IND == "cold"), size = 750, prob = 1/prob[which(IND == "cold")])
IND2 <- rep(NA, nrow(exp))
IND2[use] <- "cold"
IND2[which(exp$ID %in% dry[,1])] <- "dry"
test.i <- t.test(log(exp$Expression.Level) ~ IND2)
t_test_stats[n] <- test.i$p.value
genes <- as.character(exp$ID[which(IND2 == "cold")])
layout(matrix(1:4,ncol=2))
for(i in c(2,5)){
dat.i <- dat.test[which(is.finite(log(dat.test[,i]))==TRUE),]
use <- which(dat.i[,1] %in% genes)
id <- rep('nonGE',nrow(dat.i))
id[use] <- 'GE'
dat.i <- log(dat.i[,i])
obs.i <- abs(mean(dat.i[use])-mean(dat.i[-use]))
len1 <- c()
for(j in 1:1000){
use.j <- sample(1:length(id), length(use), replace=TRUE)
met.j <- abs(mean(dat.i[use.j])-mean(dat.i[-use.j]))
len1 <- c(len1,met.j)
}
p.i <- round(length(which(len1>obs.i)),4)/j
if(i == 2){
pval_deg[n] <- p.i
diff_deg[n] <- met.j
}
if(i == 5){
pval_eigen[n] <- p.i
diff_eigen[n] <- met.j
}
#boxplot(dat.i~id,main=paste0(colnames(dat.test)[i],' p value = ',p.i))
}
}
summary(t_test_stats)
summary(exp(diff_deg))
summary(diff_eigen)
summary(pval_eigen)
summary(pval_deg)
1 - length(which(pval_eigen < 0.05))/n
1 - length(which(pval_deg < 0.05))/n
hist(diff_deg)
hist(exp(diff_deg))
hist(exp(diff_eigen))
hist((diff_eigen))
q()
